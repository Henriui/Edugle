scalar Date

type Message {
	id: ID!
	date: Date!
	content: String!
	sender: UserId!
}

type Query {
	messages: [Message]
	messageById(id: ID!): Message
	messagesBySender(sender: ID!): [Message]
}

input MessageInput {
	date: Date!
	content: String!
	sender: UserInput!
}

type Mutation {
	createMessage(message: MessageInput!, user: UserWithTokenInput!): Message
	deleteMessage(id: ID!): Message
	deleteMessageAsAdmin(id: ID!): Message
}
