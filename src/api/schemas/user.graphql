type User {
	id: ID!
	username: String!
	email: String!
	password: String!
	description: String
	avatar: String
    token: String
}
type TokenMessage {
	token: String
	message: String!
	user: User!
}

input LoginInput {
	username: String!
	password: String!
}

input RegisterInput {
	username: String!
	email: String!
	password: String!
	description: String
	avatar: String
}

type Query {
	users: [User]
	getUserById(id: ID!): User
	validateToken: TokenMessage
}

type Mutation {
	loginUser(credentials: LoginInput!): TokenMessage
	registerUser(user: RegisterInput!): TokenMessage
	deleteUser: TokenMessage
	deleteUserAsAdmin(id: ID!): TokenMessage
}
